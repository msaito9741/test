package ms.MyBatisSample.entity.jsv;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WeatherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public WeatherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCityNameIsNull() {
            addCriterion("city_name is null");
            return (Criteria) this;
        }

        public Criteria andCityNameIsNotNull() {
            addCriterion("city_name is not null");
            return (Criteria) this;
        }

        public Criteria andCityNameEqualTo(String value) {
            addCriterion("city_name =", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameNotEqualTo(String value) {
            addCriterion("city_name <>", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameGreaterThan(String value) {
            addCriterion("city_name >", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameGreaterThanOrEqualTo(String value) {
            addCriterion("city_name >=", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameLessThan(String value) {
            addCriterion("city_name <", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameLessThanOrEqualTo(String value) {
            addCriterion("city_name <=", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameLike(String value) {
            addCriterion("city_name like", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameNotLike(String value) {
            addCriterion("city_name not like", value, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameIn(List<String> values) {
            addCriterion("city_name in", values, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameNotIn(List<String> values) {
            addCriterion("city_name not in", values, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameBetween(String value1, String value2) {
            addCriterion("city_name between", value1, value2, "cityName");
            return (Criteria) this;
        }

        public Criteria andCityNameNotBetween(String value1, String value2) {
            addCriterion("city_name not between", value1, value2, "cityName");
            return (Criteria) this;
        }

        public Criteria andWeatherNoIsNull() {
            addCriterion("weather_no is null");
            return (Criteria) this;
        }

        public Criteria andWeatherNoIsNotNull() {
            addCriterion("weather_no is not null");
            return (Criteria) this;
        }

        public Criteria andWeatherNoEqualTo(Integer value) {
            addCriterion("weather_no =", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoNotEqualTo(Integer value) {
            addCriterion("weather_no <>", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoGreaterThan(Integer value) {
            addCriterion("weather_no >", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("weather_no >=", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoLessThan(Integer value) {
            addCriterion("weather_no <", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoLessThanOrEqualTo(Integer value) {
            addCriterion("weather_no <=", value, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoIn(List<Integer> values) {
            addCriterion("weather_no in", values, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoNotIn(List<Integer> values) {
            addCriterion("weather_no not in", values, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoBetween(Integer value1, Integer value2) {
            addCriterion("weather_no between", value1, value2, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andWeatherNoNotBetween(Integer value1, Integer value2) {
            addCriterion("weather_no not between", value1, value2, "weatherNo");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNull() {
            addCriterion("city_id is null");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNotNull() {
            addCriterion("city_id is not null");
            return (Criteria) this;
        }

        public Criteria andCityIdEqualTo(String value) {
            addCriterion("city_id =", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotEqualTo(String value) {
            addCriterion("city_id <>", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThan(String value) {
            addCriterion("city_id >", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThanOrEqualTo(String value) {
            addCriterion("city_id >=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThan(String value) {
            addCriterion("city_id <", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThanOrEqualTo(String value) {
            addCriterion("city_id <=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLike(String value) {
            addCriterion("city_id like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotLike(String value) {
            addCriterion("city_id not like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdIn(List<String> values) {
            addCriterion("city_id in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotIn(List<String> values) {
            addCriterion("city_id not in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdBetween(String value1, String value2) {
            addCriterion("city_id between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotBetween(String value1, String value2) {
            addCriterion("city_id not between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andTempLoIsNull() {
            addCriterion("temp_lo is null");
            return (Criteria) this;
        }

        public Criteria andTempLoIsNotNull() {
            addCriterion("temp_lo is not null");
            return (Criteria) this;
        }

        public Criteria andTempLoEqualTo(Integer value) {
            addCriterion("temp_lo =", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoNotEqualTo(Integer value) {
            addCriterion("temp_lo <>", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoGreaterThan(Integer value) {
            addCriterion("temp_lo >", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoGreaterThanOrEqualTo(Integer value) {
            addCriterion("temp_lo >=", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoLessThan(Integer value) {
            addCriterion("temp_lo <", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoLessThanOrEqualTo(Integer value) {
            addCriterion("temp_lo <=", value, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoIn(List<Integer> values) {
            addCriterion("temp_lo in", values, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoNotIn(List<Integer> values) {
            addCriterion("temp_lo not in", values, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoBetween(Integer value1, Integer value2) {
            addCriterion("temp_lo between", value1, value2, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempLoNotBetween(Integer value1, Integer value2) {
            addCriterion("temp_lo not between", value1, value2, "tempLo");
            return (Criteria) this;
        }

        public Criteria andTempHiIsNull() {
            addCriterion("temp_hi is null");
            return (Criteria) this;
        }

        public Criteria andTempHiIsNotNull() {
            addCriterion("temp_hi is not null");
            return (Criteria) this;
        }

        public Criteria andTempHiEqualTo(Integer value) {
            addCriterion("temp_hi =", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiNotEqualTo(Integer value) {
            addCriterion("temp_hi <>", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiGreaterThan(Integer value) {
            addCriterion("temp_hi >", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiGreaterThanOrEqualTo(Integer value) {
            addCriterion("temp_hi >=", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiLessThan(Integer value) {
            addCriterion("temp_hi <", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiLessThanOrEqualTo(Integer value) {
            addCriterion("temp_hi <=", value, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiIn(List<Integer> values) {
            addCriterion("temp_hi in", values, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiNotIn(List<Integer> values) {
            addCriterion("temp_hi not in", values, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiBetween(Integer value1, Integer value2) {
            addCriterion("temp_hi between", value1, value2, "tempHi");
            return (Criteria) this;
        }

        public Criteria andTempHiNotBetween(Integer value1, Integer value2) {
            addCriterion("temp_hi not between", value1, value2, "tempHi");
            return (Criteria) this;
        }

        public Criteria andPrcpIsNull() {
            addCriterion("prcp is null");
            return (Criteria) this;
        }

        public Criteria andPrcpIsNotNull() {
            addCriterion("prcp is not null");
            return (Criteria) this;
        }

        public Criteria andPrcpEqualTo(Integer value) {
            addCriterion("prcp =", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpNotEqualTo(Integer value) {
            addCriterion("prcp <>", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpGreaterThan(Integer value) {
            addCriterion("prcp >", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpGreaterThanOrEqualTo(Integer value) {
            addCriterion("prcp >=", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpLessThan(Integer value) {
            addCriterion("prcp <", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpLessThanOrEqualTo(Integer value) {
            addCriterion("prcp <=", value, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpIn(List<Integer> values) {
            addCriterion("prcp in", values, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpNotIn(List<Integer> values) {
            addCriterion("prcp not in", values, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpBetween(Integer value1, Integer value2) {
            addCriterion("prcp between", value1, value2, "prcp");
            return (Criteria) this;
        }

        public Criteria andPrcpNotBetween(Integer value1, Integer value2) {
            addCriterion("prcp not between", value1, value2, "prcp");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("date is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("date is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("date =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("date <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("date >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("date <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("date in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("date not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date not between", value1, value2, "date");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jsv.weather
     *
     * @mbg.generated do_not_delete_during_merge Sun Feb 11 13:05:06 JST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jsv.weather
     *
     * @mbg.generated Sun Feb 11 13:05:06 JST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}